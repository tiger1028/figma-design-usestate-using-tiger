name: Development (DEV)

on:
  push:
    branches:
      - main
      - dev

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write

    env:
      ENV: ${{github.ref_name == 'dev' && 'DEV_ENV' || 'PROD_ENV'}}
      SSH_HOST: ${{github.ref_name == 'dev' && 'DEV_SSH_HOST' || 'PROD_SSH_HOST'}}
      SSH_USERNAME: ${{github.ref_name == 'dev' && 'DEV_USERNAME' || 'PROD_USERNAME'}}
      SSH_PASSWORD: ${{github.ref_name == 'dev' && 'DEV_PASSWORD' || 'PROD_PASSWORD'}}

    steps:
      - name: Branch name
        run: echo running on branch ${{ github.ref_name }}

      - name: Check env variables
        run: |
          echo ${{env.ENV}}
          echo ${{env.SSH_HOST}}
          echo ${{env.SSH_USERNAME}}
          echo ${{env.SSH_PASSWORD}}
          echo "Environment variables set for ${{ github.ref_name }}"
      # - name: Checkout code
      #   uses: actions/checkout@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Push Docker image to GHCR
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     push: true
      #     tags: ghcr.io/${{ github.repository }}:latest

  # deploy:
  #   needs: [build]

  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Deploy to Remote Server
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.DEV_SSH_HOST }}
  #         username: ${{ secrets.DEV_SSH_USERNAME }}
  #         password: ${{ secrets.DEV_SSH_PASSWORD }}
  #         script: |
  #           echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
  #           docker rm $(docker stop $(docker ps -a -q --filter ancestor=ghcr.io/${{ github.repository }}))
  #           docker rmi ghcr.io/${{ github.repository }}
  #           docker pull ghcr.io/${{ github.repository }}:latest
  #           docker run -d --name myfirstpro --network tiger ghcr.io/${{ github.repository }}:latest
